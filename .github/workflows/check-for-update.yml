name: Check for Update

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  minikube-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - name: check minikube quarkus version
        working-directory: ./.github/workflows
        run: |
          echo "SOURCE_VERSION=$(grep "minikube-version" minikube-quarkus-ci.yml | awk '{print $2}')" >> $GITHUB_ENV
          echo "TARGET_VERSION=$(curl -s https://api.github.com/repos/kubernetes/minikube/releases | jq -r '.[].tag_name' | grep -v '-' | sort -t'.' -k2,2n | tail -n 1 | tr -d 'v')" >> $GITHUB_ENV
      - name: check current diff
        run: |
          echo CURRENT: ${SOURCE_VERSION}
          echo TARGET: ${TARGET_VERSION}
          test "${TARGET_VERSION}" != ""
          if [[ ${SOURCE_VERSION} != ${TARGET_VERSION} ]]; then
            echo "UNMATCH_VERSION=true" >> $GITHUB_ENV
            echo "Unmatched."
          fi
      - name: update minikube quarkus version
        if: env.UNMATCH_VERSION == 'true'
        working-directory: ./.github/workflows
        run: |
          git switch -c actions/check-for-update-minikube
          git push -u origin actions/check-for-update-minikube
          sed -i -e "s/$SOURCE_VERSION/$TARGET_VERSION/g" minikube-quarkus-ci.yml
          echo "SOURCE_VERSION_UPDATED=$(grep "minikube-version" minikube-quarkus-ci.yml | awk '{print $2}')" >> $GITHUB_ENV
      - name: check updated diff
        if: env.UNMATCH_VERSION == 'true'
        working-directory: ./.github/workflows
        run: |
          echo CURRENT_UPDATED: ${SOURCE_VERSION_UPDATED}
          echo TARGET: ${TARGET_VERSION}
          test ${SOURCE_VERSION_UPDATED} = ${TARGET_VERSION}
      - name: git add and commit
        if: env.UNMATCH_VERSION == 'true'
        uses: EndBug/add-and-commit@v9
      - name: git push
        if: env.UNMATCH_VERSION == 'true'
        run: |
          git push -u origin actions/check-for-update-minikube
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4

  kubernetes-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - name: check current kubernetes quarkus version
        working-directory: ./.github/workflows
        run: echo "SOURCE_VERSION=$(grep "k8s-version" minikube-quarkus-ci.yml | awk '{print $2}')" >> $GITHUB_ENV
      - name: check latest tag kubernetes version
        run: echo "TARGET_VERSION=$(curl -s https://api.github.com/repos/kubernetes/kubernetes/releases | jq -r '.[].tag_name' | grep -v '-' | sort -t'.' -k2,2n | tail -n 1 | tr -d 'v')" >> $GITHUB_ENV
      - name: check diff kubernetes
        run: |
          echo CURRENT: ${SOURCE_VERSION}
          echo TARGET: ${TARGET_VERSION}
          test ${SOURCE_VERSION} = ${TARGET_VERSION}
      - name: check current minikube yaml version
        working-directory: ./.github/workflows
        run: echo "SOURCE_VERSION=$(grep "k8s-version" minikube-yaml-ci.yml | awk '{print $2}')" >> $GITHUB_ENV
      - name: check diff yaml
        run: |
          echo CURRENT: ${SOURCE_VERSION}
          echo TARGET: ${TARGET_VERSION}
          test ${SOURCE_VERSION} = ${TARGET_VERSION}
      - name: check current minikube stress version
        working-directory: ./.github/workflows
        run: echo "SOURCE_VERSION=$(grep "k8s-version" minikube-stress-ci.yml | awk '{print $2}')" >> $GITHUB_ENV
      - name: check diff stress
        run: |
          echo CURRENT: ${SOURCE_VERSION}
          echo TARGET: ${TARGET_VERSION}
          test ${SOURCE_VERSION} = ${TARGET_VERSION}
      - name: check current minikube security version
        working-directory: ./.github/workflows
        run: echo "SOURCE_VERSION=$(grep "k8s-version" minikube-security-ci.yml | awk '{print $2}')" >> $GITHUB_ENV
      - name: check diff security
        run: |
          echo CURRENT: ${SOURCE_VERSION}
          echo TARGET: ${TARGET_VERSION}
          test ${SOURCE_VERSION} = ${TARGET_VERSION}

  chaos-mesh-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - name: check current chaos mesh version
        working-directory: ./.github/workflows
        run: echo "SOURCE_VERSION=$(grep CHAOS_MESH_VERSION kind-chaos-mesh-ci.yml | awk '{print $2}')" >> $GITHUB_ENV
      - name: check latest tag chaos mesh version
        run: echo "TARGET_VERSION=$(curl -s https://api.github.com/repos/chaos-mesh/chaos-mesh/releases | jq -r '.[].tag_name' | grep -v '-' | sort -t'.' -k2,2n | tail -n 1 | tr -d 'v')" >> $GITHUB_ENV
      - name: check diff chaos mesh
        run: |
          echo CURRENT: ${SOURCE_VERSION}
          echo TARGET: ${TARGET_VERSION}
          test ${SOURCE_VERSION} = ${TARGET_VERSION}
