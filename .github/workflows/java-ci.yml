name: Java CI

on:
  push:
    branches:
      - master
    paths:
      - "**.java"
      - "application/**"
      - ".github/workflows/java-ci.yml"
  pull_request:
    paths:
      - "**.java"
      - "application/**"
      - ".github/workflows/java-ci.yml"

jobs:
  init-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-parent-pom
          restore-keys: ${{ runner.os }}-sonar-parent-pom
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-parent-pom-${{ hashFiles('**/parent-pom/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-parent-pom
      - name: Maven Deploy POM to Github Package Registry
        working-directory: ./application/parent-pom/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B deploy --settings ../.m2/settings.xml

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-webapp-service
          restore-keys: ${{ runner.os }}-sonar-webapp-service
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-webapp-service-${{ hashFiles('**/webapp-service/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-webapp-service
      - name: Maven Deploy to Github Package Registry
        working-directory: ./application/webapp-service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B deploy --settings ../.m2/settings.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/webapp-service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_webapp-service
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      - name: Upload test results to Datadog
        if: always()
        run: |
          npm install -g @datadog/datadog-ci
          DD_ENV=ci DATADOG_API_KEY=${{ secrets.DATADOG_APIKEY }} DATADOG_SITE=datadoghq.com datadog-ci junit upload --service webapp-service target/surefire-reports

  jaxrs-activemq-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-activemq-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-activemq-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-activemq-quarkus-${{ hashFiles('**/jaxrs-activemq-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-activemq-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-activemq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-activemq-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-activemq-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-activemq-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-activemq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-activemq-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  consumer-activemq-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-consumer-activemq-quarkus
          restore-keys: ${{ runner.os }}-sonar-consumer-activemq-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-consumer-activemq-quarkus-${{ hashFiles('**/consumer-activemq-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-consumer-activemq-quarkus
      - name: Maven Build
        working-directory: ./application/consumer-activemq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/consumer-activemq-quarkus/src/main/docker/Dockerfile.jvm
          context: application/consumer-activemq-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/consumer-activemq-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/consumer-activemq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_consumer-activemq-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-cassandra-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-cassandra-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-cassandra-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-cassandra-quarkus-${{ hashFiles('**/jaxrs-cassandra-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-cassandra-quarkus
      - name: docker pull for maven build
        run: |
          docker pull quay.io/testcontainers/ryuk:0.2.3
          docker images
      - name: Maven Build
        working-directory: ./application/jaxrs-cassandra-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-cassandra-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-cassandra-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-cassandra-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-cassandra-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-cassandra-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  consumer-hazelcast-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-consumer-hazelcast-quarkus
          restore-keys: ${{ runner.os }}-sonar-consumer-hazelcast-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-consumer-hazelcast-quarkus-${{ hashFiles('**/consumer-hazelcast-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-consumer-hazelcast-quarkus
      - name: Maven Build
        working-directory: ./application/consumer-hazelcast-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/consumer-hazelcast-quarkus/src/main/docker/Dockerfile.jvm
          context: application/consumer-hazelcast-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/consumer-hazelcast-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/consumer-hazelcast-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_consumer-hazelcast-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  consumer-kafka-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-consumer-kafka-quarkus
          restore-keys: ${{ runner.os }}-sonar-consumer-kafka-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-consumer-kafka-quarkus-${{ hashFiles('**/consumer-kafka-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-consumer-kafka-quarkus
      - name: Maven Build
        working-directory: ./application/consumer-kafka-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml -Pnative
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/consumer-kafka-quarkus/src/main/docker/Dockerfile.jvm
          context: application/consumer-kafka-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/consumer-kafka-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/consumer-kafka-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_consumer-kafka-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  converter-kafka-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-converter-kafka-quarkus
          restore-keys: ${{ runner.os }}-sonar-converter-kafka-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-converter-kafka-quarkus-${{ hashFiles('**/converter-kafka-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-converter-kafka-quarkus
      - name: Maven Build
        working-directory: ./application/converter-kafka-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml -Pnative
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/converter-kafka-quarkus/src/main/docker/Dockerfile.jvm
          context: application/converter-kafka-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/converter-kafka-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/converter-kafka-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_converter-kafka-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  scheduled-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-scheduled-quarkus
          restore-keys: ${{ runner.os }}-sonar-scheduled-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-scheduled-quarkus-${{ hashFiles('**/scheduled-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-scheduled-quarkus
      - name: Maven Build
        working-directory: ./application/scheduled-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml -Pnative
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/scheduled-quarkus/src/main/docker/Dockerfile.jvm
          context: application/scheduled-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/scheduled-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/scheduled-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_scheduled-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-hazelcast-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-hazelcast-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-hazelcast-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-hazelcast-quarkus-${{ hashFiles('**/jaxrs-hazelcast-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-hazelcast-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-hazelcast-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-hazelcast-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-hazelcast-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-hazelcast-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-hazelcast-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-hazelcast-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-kafka-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-kafka-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-kafka-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-kafka-quarkus-${{ hashFiles('**/jaxrs-kafka-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-kafka-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-kafka-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml -Pnative
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-kafka-quarkus/src/main/docker/Dockerfile.native
          context: application/jaxrs-kafka-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-kafka-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-kafka-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-kafka-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-memcached-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-memcached-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-memcached-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-memcached-quarkus-${{ hashFiles('**/jaxrs-memcached-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-memcached-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-memcached-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-memcached-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-memcached-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-memcached-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-memcached-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-memcached-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-mongodb-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-mongodb-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-mongodb-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-mongodb-quarkus-${{ hashFiles('**/jaxrs-mongodb-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-mongodb-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-mongodb-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-mongodb-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-mongodb-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-mongodb-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-mongodb-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-mongodb-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-mysql-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-mysql-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-mysql-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-mysql-quarkus-${{ hashFiles('**/jaxrs-mysql-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-mysql-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-mysql-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-mysql-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-mysql-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-mysql-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-mysql-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-mysql-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-postgres-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-postgres-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-postgres-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-postgres-quarkus-${{ hashFiles('**/jaxrs-postgres-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-postgres-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-postgres-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-postgres-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-postgres-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-postgres-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-postgres-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-postgres-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-rabbitmq-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-rabbitmq-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-rabbitmq-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-rabbitmq-quarkus-${{ hashFiles('**/jaxrs-rabbitmq-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-rabbitmq-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-rabbitmq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-rabbitmq-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-rabbitmq-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-rabbitmq-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-rabbitmq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-rabbitmq-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-redis-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-redis-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-redis-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-redis-quarkus-${{ hashFiles('**/jaxrs-redis-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-redis-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-redis-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-redis-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-redis-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-redis-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-redis-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-redis-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  consumer-rabbitmq-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-consumer-rabbitmq-quarkus
          restore-keys: ${{ runner.os }}-sonar-consumer-rabbitmq-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-consumer-rabbitmq-quarkus-${{ hashFiles('**/consumer-rabbitmq-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-consumer-rabbitmq-quarkus
      - name: Maven Build
        working-directory: ./application/consumer-rabbitmq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/consumer-rabbitmq-quarkus/src/main/docker/Dockerfile.jvm
          context: application/consumer-rabbitmq-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/consumer-rabbitmq-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/consumer-rabbitmq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_consumer-rabbitmq-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  converter-rabbitmq-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-converter-rabbitmq-quarkus
          restore-keys: ${{ runner.os }}-sonar-converter-rabbitmq-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-converter-rabbitmq-quarkus-${{ hashFiles('**/converter-rabbitmq-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-converter-rabbitmq-quarkus
      - name: Maven Build
        working-directory: ./application/converter-rabbitmq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/converter-rabbitmq-quarkus/src/main/docker/Dockerfile.jvm
          context: application/converter-rabbitmq-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/converter-rabbitmq-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/converter-rabbitmq-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_converter-rabbitmq-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  producer-kafka-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-producer-kafka-quarkus
          restore-keys: ${{ runner.os }}-sonar-producer-kafka-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-producer-kafka-quarkus-${{ hashFiles('**/producer-kafka-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-producer-kafka-quarkus
      - name: Maven Build
        working-directory: ./application/producer-kafka-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml -Pnative
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/producer-kafka-quarkus/src/main/docker/Dockerfile.jvm
          context: application/producer-kafka-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/producer-kafka-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/producer-kafka-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_producer-kafka-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  randompublish-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-randompublish-quarkus
          restore-keys: ${{ runner.os }}-sonar-randompublish-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-randompublish-quarkus-${{ hashFiles('**/randompublish-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-randompublish-quarkus
      - name: Maven Build
        working-directory: ./application/randompublish-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml -Pnative
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/randompublish-quarkus/src/main/docker/Dockerfile.jvm
          context: application/randompublish-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/randompublish-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/randompublish-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_randompublish-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  server-grpc-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-server-grpc-quarkus
          restore-keys: ${{ runner.os }}-sonar-server-grpc-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-server-grpc-quarkus-${{ hashFiles('**/server-grpc-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-server-grpc-quarkus
      - name: Maven Build
        working-directory: ./application/server-grpc-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml -Pnative
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/server-grpc-quarkus/src/main/docker/Dockerfile.jvm
          context: application/server-grpc-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/server-grpc-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/server-grpc-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_server-grpc-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  jaxrs-grpc-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-jaxrs-grpc-quarkus
          restore-keys: ${{ runner.os }}-sonar-jaxrs-grpc-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jaxrs-grpc-quarkus-${{ hashFiles('**/jaxrs-grpc-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-jaxrs-grpc-quarkus
      - name: Maven Build
        working-directory: ./application/jaxrs-grpc-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml -Pnative
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/jaxrs-grpc-quarkus/src/main/docker/Dockerfile.jvm
          context: application/jaxrs-grpc-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/jaxrs-grpc-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/jaxrs-grpc-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_jaxrs-grpc-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  consumer-redis-quarkus:
    needs: init-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: "22.2.0"
          java: "java17"
          arch: "amd64"
      - run: java -version
      - name: setup-native-image
        run: |
          gu install native-image
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/main
      - name: setup docker push actions
        run: |
          if [[ github.event_name == 'push' ]]; then
            echo "PUSH=true" >> $GITHUB_ENV
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Cache SonarCloud packages
        uses: actions/cache@v3.2.4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-consumer-redis-quarkus
          restore-keys: ${{ runner.os }}-sonar-consumer-redis-quarkus
      - name: Cache local Maven repository
        uses: actions/cache@v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-consumer-redis-quarkus-${{ hashFiles('**/consumer-redis-quarkus/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-consumer-redis-quarkus
      - name: Maven Build
        working-directory: ./application/consumer-redis-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B package --settings ../.m2/settings.xml
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: application/consumer-redis-quarkus/src/main/docker/Dockerfile.jvm
          context: application/consumer-redis-quarkus
          push: ${{ env.PUSH }}
          tags: ${{ secrets.DOCKERHUB_USER }}/consumer-redis-quarkus:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload coverage to SonarCloud
        working-directory: ./application/consumer-redis-quarkus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=yurake_consumer-redis-quarkus
          -Dsonar.organization=yurak
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
